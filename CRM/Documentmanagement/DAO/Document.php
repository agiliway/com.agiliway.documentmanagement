<?php
/*
+--------------------------------------------------------------------+
| CiviCRM version 4.7                                                |
+--------------------------------------------------------------------+
| Copyright CiviCRM LLC (c) 2004-2017                                |
+--------------------------------------------------------------------+
| This file is a part of CiviCRM.                                    |
|                                                                    |
| CiviCRM is free software; you can copy, modify, and distribute it  |
| under the terms of the GNU Affero General Public License           |
| Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
|                                                                    |
| CiviCRM is distributed in the hope that it will be useful, but     |
| WITHOUT ANY WARRANTY; without even the implied warranty of         |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
| See the GNU Affero General Public License for more details.        |
|                                                                    |
| You should have received a copy of the GNU Affero General Public   |
| License and the CiviCRM Licensing Exception along                  |
| with this program; if not, contact CiviCRM LLC                     |
| at info[AT]civicrm[DOT]org. If you have questions about the        |
| GNU Affero General Public License or the licensing of CiviCRM,     |
| see the CiviCRM license FAQ at http://civicrm.org/licensing        |
+--------------------------------------------------------------------+
*/
/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2017
 *
 * Generated from xml/schema/CRM/Case/Case.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:4e1de0ce877b15b7ab3f394dad97c5ac)
 */

/**
 * CRM_Documentmanagement_DAO_Document constructor.
 */
class CRM_Documentmanagement_DAO_Document extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'civicrm_documents';

  /**
   * Static entity name.
   *
   * @var string
   */
  static $entityName = 'Document';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log
   * table.
   *
   * @var boolean
   */
  static $_log = TRUE;

  /**
   * @var int
   */
  public $id;

  /**
   * @var int
   */
  public $contact_id;

  /**
   * @var string
   */
  public $title;

  /**
   * @var int
   */
  public $category_id;

  /**
   * @var int
   */
  public $type_id;

  /**
   * @var int
   */
  public $campaign_id;

  /**
   * @var int
   */
  public $file_id;

  /**
   * @var int
   */
  public $creator_id;

  /**
   * @var string
   */
  public $create_date;

  /**
   * @var int
   */
  public $last_updater_id;

  /**
   * @var string
   */
  public $last_update_date;

  /**
   * Returns the names of this table
   *
   * @return string
   */
  static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns entity name
   *
   * @return string
   */
  static function getEntityName() {
    return self::$entityName;
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('id'),
          'description' => 'id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Contact id'),
          'description' => 'Contact id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.contact_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'FKClassName' => 'CRM_Contact_DAO_Contact',
        ],
        'title' => [
          'name' => 'title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Title'),
          'description' => 'title',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.title',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
        ],
        'category_id' => [
          'name' => 'category_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Category id'),
          'description' => 'Category id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.category_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'pseudoconstant' => [
            'optionGroupName' => 'document_categories',
          ],
        ],
        'type_id' => [
          'name' => 'type_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Type id'),
          'description' => 'Type id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.type_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'pseudoconstant' => [
            'optionGroupName' => 'document_types',
          ],
        ],
        'campaign_id' => [
          'name' => 'campaign_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Campaign id'),
          'description' => 'Campaign id',
          'required' => FALSE,
          'import' => TRUE,
          'where' => self::getTableName() . '.campaign_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'FKClassName' => 'CRM_Campaign_DAO_Campaign',
        ],
        'file_id' => [
          'name' => 'file_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('File id'),
          'description' => 'File id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.file_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'FKClassName' => 'CRM_Core_DAO_EntityFile',
        ],
        'creator_id' => [
          'name' => 'creator_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Creator id'),
          'description' => 'Creator id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.creator_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'FKClassName' => 'CRM_Contact_DAO_Contact',
        ],
        'create_date' => [
          'name' => 'create_date',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Create date'),
          'description' => 'Create date',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.create_date',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
        ],
        'last_updater_id' => [
          'name' => 'last_updater_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Last updater id'),
          'description' => 'Last updater id',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.last_updater_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
          'FKClassName' => 'CRM_Contact_DAO_Contact',
        ],
        'last_update_date' => [
          'name' => 'last_update_date',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Last update date'),
          'description' => 'Last update date',
          'required' => TRUE,
          'import' => TRUE,
          'where' => self::getTableName() . '.last_update_date',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => TRUE,
          'table_name' => self::getTableName(),
          'entity' => self::getEntityName(),
          'bao' => 'CRM_Documentmanagement_BAO_Document',
        ],
      ];

      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }

    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, self::getTableName(), $prefix, []);
    return $r;
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in
   * fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }

    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

}
